<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Today I Learned on TIL</title><link>https://til.rdz.io/</link><description>Recent content in Today I Learned on TIL</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Thu, 04 Nov 2021 12:40:03 -0400</lastBuildDate><atom:link href="https://til.rdz.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Get Waiting Tasks</title><link>https://til.rdz.io/docs/sql/waiting-tasks/</link><pubDate>Sat, 06 Nov 2021 16:13:01 -0400</pubDate><guid>https://til.rdz.io/docs/sql/waiting-tasks/</guid><description>Get Waiting Tasks 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 /*============================================================================ File: WaitingTasks.sql Summary: Snapshot of waiting tasks SQL Server Versions: 2005 onward ------------------------------------------------------------------------------ Written by Paul S.</description></item><item><title>SQL User Administration</title><link>https://til.rdz.io/docs/sql/sql-user-administration/</link><pubDate>Sat, 06 Nov 2021 16:07:57 -0400</pubDate><guid>https://til.rdz.io/docs/sql/sql-user-administration/</guid><description>Adding SQL Users and Logins Sql Auth Master Login and User 1 2 3 4 5 6 7 8 9 10 11 12 -- create SQL auth login from master CREATELOGINtestWITHPASSWORD=&amp;#39;SuperSecret!&amp;#39;-- select your db in the dropdown and create a user mapped to a login CREATEUSER[test]FORLOGIN[test]WITHDEFAULT_SCHEMA=dbo;-- add user to role(s) in db ALTERROLEdb_datareaderADDMEMBER[test];ALTERROLEdb_datawriterADDMEMBER[test]; Sql Auth Contained User 1 2 3 4 5 6 7 8 -- select your db in dropdown and create a contained user CREATEUSER[test]WITHPASSWORD=&amp;#39;SuperSecret!</description></item><item><title>Get Database Info</title><link>https://til.rdz.io/docs/sql/get-database-info/</link><pubDate>Sat, 06 Nov 2021 15:55:46 -0400</pubDate><guid>https://til.rdz.io/docs/sql/get-database-info/</guid><description>Get Database Sizes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 SELECT[DatabaseName]=DB_NAME(database_id),[Type]=CASEWHENType_Desc=&amp;#39;ROWS&amp;#39;THEN&amp;#39;Data File(s)&amp;#39;WHENType_Desc=&amp;#39;LOG&amp;#39;THEN&amp;#39;Log File(s)&amp;#39;ELSE&amp;#39;Combined Total&amp;#39;END,[SizeinMB]=CAST(((SUM(Size)*8)/1024.0)ASDECIMAL(18,2))FROMsys.master_files--WHERE database_id = DB_ID(‘Database Name’) GROUPBYGROUPINGSETS((DB_NAME(database_id),Type_Desc),(DB_NAME(database_id)))ORDERBYDB_NAME(database_id),Type_DescDESCGO List all Database filenames and locations 1 2 3 4 5 6 7 8 9 SELECTdb.nameASDBName,mf.nameASFileName,type_descASFileType,Physical_NameASLocationFROMsys.master_filesmfINNERJOINsys.databasesdbONdb.database_id=mf.database_id List CLR References 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 SELECTso.</description></item><item><title>Backup/Restore Monitoring</title><link>https://til.rdz.io/docs/sql/get-backup-or-restore-status/</link><pubDate>Sat, 06 Nov 2021 15:54:26 -0400</pubDate><guid>https://til.rdz.io/docs/sql/get-backup-or-restore-status/</guid><description>Get Backup or Restore Status Execute the following query to get the current backup or restore status with estimated completion time.
1 2 3 4 5 6 7 8 9 SELECTsession_idASSPID,command,a.TEXTASQuery,start_time,percent_complete,dateadd(second,estimated_completion_time/1000,getdate())ASestimated_completion_timeFROMsys.dm_exec_requestsrCROSSAPPLYsys.dm_exec_sql_text(r.sql_handle)aWHEREr.commandIN(&amp;#39;BACKUP DATABASE&amp;#39;,&amp;#39;RESTORE DATABASE&amp;#39;)</description></item><item><title>Troubleshooting</title><link>https://til.rdz.io/docs/sql/troubleshooting/</link><pubDate>Sat, 06 Nov 2021 15:52:52 -0400</pubDate><guid>https://til.rdz.io/docs/sql/troubleshooting/</guid><description>Find blocking spids/queries Use the following script if not using sp_blitzwho or sp_whoisactive
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 -- List down all the blocking process or root blockers SELECTDISTINCTp1.spidAS[Blocking/RootBlockerSPID],p1.[loginame]AS[RootBlocker_Login],st.textAS[SQLQueryText],p1.[CPU],p1.[Physical_IO],DB_NAME(p1.[dbid])ASDBName,p1.[Program_name],p1.[HostName],p1.[Status],p1.[CMD],p1.[Blocked],p1.[ECID]AS[ExecutionContextID]FROMsys.sysprocessesp1INNERJOINsys.sysprocessesp2ONp1.spid=p2.blockedANDp1.ecid=p2.ecidCROSSAPPLYsys.dm_exec_sql_text(p1.sql_handle)stWHEREp1.blocked=0ORDERBYp1.spid,p1.ecid-- List Down all the blocked processes SELECTp2.spidAS&amp;#39;Blocked SPID&amp;#39;,p2.blockedAS&amp;#39;Blocking/Root Blocker SPID&amp;#39;,p2.[loginame]AS[BlockedSPID_Login],st.textAS[SQLQueryText],p2.[CPU],p2.[Physical_IO],DB_NAME(p2.[dbid])ASDBName,p2.[Program_name],p2.[HostName],p2.[Status],p2.[CMD],p2.ECIDAS[ExecutionContextID]FROMsys.sysprocessesp1INNERJOINsys.sysprocessesp2ONp1.spid=p2.blockedANDp1.ecid=p2.ecidCROSSAPPLYsys.dm_exec_sql_text(p1.sql_handle)st Find connections and running queries List all active connections sp_who2 active - Bultin not much details sp_whoIsActive - Much more detailed lots of filtering options Download Link sp_BlitzWho - Great Detail takes a bit longer to execute.</description></item><item><title>Drop All Tables</title><link>https://til.rdz.io/docs/sql/drop-all-tables-azure-sql/</link><pubDate>Sat, 06 Nov 2021 15:46:35 -0400</pubDate><guid>https://til.rdz.io/docs/sql/drop-all-tables-azure-sql/</guid><description>Drop all tables (Azure Sql Compatible) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 DECLARE@sqlNVARCHAR(2000)WHILE(EXISTS(SELECT1fromINFORMATION_SCHEMA.TABLE_CONSTRAINTSWHERECONSTRAINT_TYPE=&amp;#39;FOREIGN KEY&amp;#39;))BEGINSELECTTOP1@sql=(&amp;#39;ALTER TABLE &amp;#39;+TABLE_SCHEMA+&amp;#39;.[&amp;#39;+TABLE_NAME+&amp;#39;] DROP CONSTRAINT [&amp;#39;+CONSTRAINT_NAME+&amp;#39;]&amp;#39;)FROMINFORMATION_SCHEMA.TABLE_CONSTRAINTSWHERECONSTRAINT_TYPE=&amp;#39;FOREIGN KEY&amp;#39;EXEC(@sql)PRINT@sqlENDWHILE(EXISTS(SELECT*fromINFORMATION_SCHEMA.TABLESWHERETABLE_NAME!=&amp;#39;__MigrationHistory&amp;#39;ANDTABLE_NAME!=&amp;#39;database_firewall_rules&amp;#39;))BEGINSELECTTOP1@sql=(&amp;#39;DROP TABLE &amp;#39;+TABLE_SCHEMA+&amp;#39;.[&amp;#39;+TABLE_NAME+&amp;#39;]&amp;#39;)FROMINFORMATION_SCHEMA.TABLESWHERETABLE_NAME!=&amp;#39;__MigrationHistory&amp;#39;ANDTABLE_NAME!=&amp;#39;database_firewall_rules&amp;#39;EXEC(@sql)PRINT@sqlEND</description></item><item><title>External Table Creation</title><link>https://til.rdz.io/docs/sql/create-external-tables-scripted/</link><pubDate>Thu, 04 Nov 2021 16:42:54 -0400</pubDate><guid>https://til.rdz.io/docs/sql/create-external-tables-scripted/</guid><description>External Table Creation Script Use the following script to create external tables in Azure SQL. Execute in the source DB to parse all tables into the scripts needed to create the external tables.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 Declare@table_namenvarchar(256)DECLARE@db_namevarchar(max)SET@table_name=&amp;#39;&amp;#39;WHILE@table_nameISNOTNULLBEGINSET@table_name=(SELECTMIN(TABLE_SCHEMA+&amp;#39;.</description></item><item><title>Linked Servers</title><link>https://til.rdz.io/docs/sql/linked-servers/</link><pubDate>Thu, 04 Nov 2021 16:41:09 -0400</pubDate><guid>https://til.rdz.io/docs/sql/linked-servers/</guid><description>Add Login Mapping to Linked Server Mapped Login to Remote SQL Login 1 2 3 4 5 6 7 8 USE[master]GOEXECmaster.dbo.sp_addlinkedsrvlogin@rmtsrvname=N&amp;#39;&amp;lt;SERVER NAME&amp;gt;&amp;#39;,@locallogin=N&amp;#39;&amp;lt;LOCAL LOGIN&amp;gt;&amp;#39;,@useself=N&amp;#39;False&amp;#39;,@rmtuser=N&amp;#39;&amp;lt;REMOTE LOGIN&amp;gt;&amp;#39;,@rmtpassword=N&amp;#39;&amp;lt;REMOTE PASSWORD&amp;gt;&amp;#39; User Impersonation 1 2 3 4 5 6 USE[master]GOEXECmaster.dbo.sp_addlinkedsrvlogin@rmtsrvname=N&amp;#39;&amp;lt;SERVER NAME&amp;gt;&amp;#39;,@locallogin=N&amp;#39;&amp;lt;LOCAL LOGIN&amp;gt;&amp;#39;,@useself=N&amp;#39;True&amp;#39; Detailed Linked Server Report 1 2 3 4 SELECT*FROMsys.ServersaLEFTOUTERJOINsys.linked_loginsbONb.server_id=a.server_idLEFTOUTERJOINsys.server_principalscONc.principal_id=b.local_principal_id Find SQL Linked Server Depdendencies 1 2 3 4 5 6 7 8 9 10 SELECTDistinctreferenced_Server_nameAsLinkedServerName,referenced_schema_nameASLinkedServerSchema,referenced_database_nameASLinkedServerDB,referenced_entity_nameAsLinkedServerTable,OBJECT_NAME(referencing_id)ASObjectUsingLinkedServerFROMsys.sql_expression_dependenciesJOINsys.objectsoono.object_id=referencing_id-- WHERE o.name = &amp;#39;&amp;lt;VIEW / SPROC NAME&amp;gt;&amp;#39; --UNCOMMENT TO FILTER ON SPECIFIC VIEW OR SPROC</description></item><item><title>Misc</title><link>https://til.rdz.io/docs/misc/</link><pubDate>Thu, 04 Nov 2021 16:34:09 -0400</pubDate><guid>https://til.rdz.io/docs/misc/</guid><description>Reading Google SRE Series of books Tools This is a list of misc tools and links I use day to day.
VS Code Notepads MobaXterm Azure Data Studio Windows Terminal Windows PowerToys Greenshot LICEcap SQL First Responder Kit dbatools sp_whoisactive</description></item><item><title>Reset DSC</title><link>https://til.rdz.io/docs/powershell/reset-dsc/</link><pubDate>Thu, 04 Nov 2021 16:32:45 -0400</pubDate><guid>https://til.rdz.io/docs/powershell/reset-dsc/</guid><description>Reset DSC Local Configuration Manager 1 2 3 4 5 6 7 8 9 10 11 12 13 14 [DscLocalConfigurationManager()] Configuration ResetLCM { Node localhost { Settings { RebootNodeIfNeeded = $True ConfigurationMode = &amp;#39;ApplyAndMonitor&amp;#39; RefreshMode = &amp;#39;Push&amp;#39; ActionAfterReboot = &amp;#39;ContinueConfiguration&amp;#39; } } } ResetLCM -out c:\$env:temp\resetLCM Set-DscLocalConfigurationManager -Path C:\$env:temp\resetLCM -Verbose</description></item><item><title>Create SPN</title><link>https://til.rdz.io/docs/azure/create-spn/</link><pubDate>Thu, 04 Nov 2021 14:22:12 -0400</pubDate><guid>https://til.rdz.io/docs/azure/create-spn/</guid><description>Create SPN and Set Permissions for ADO Create the SPN
1 2 3 4 5 $DisplayName = &amp;#34;mySPN&amp;#34; Add-Type -AssemblyName &amp;#39;System.Web&amp;#39; $password = &amp;#34;$([System.Web.Security.Membership]::GeneratePassword(20, 5))&amp;#34; $credentials = New-Object -TypeName Microsoft.Azure.Commands.ActiveDirectory.PSADPasswordCredential -Property @{ StartDate=Get-Date; EndDate=Get-Date -Year 2024; Password=$password} $spn = New-AzAdServicePrincipal -DisplayName $DisplayName -PasswordCredential $credentials Set permissions on one more resource groups
1 2 3 4 5 6 7 8 9 10 11 # Define ResourceGroup Permissions $permissions = @{ Reader = @(&amp;#39;myappRG&amp;#39;) Contributor = @(&amp;#39;StorAcctRG&amp;#39;, &amp;#39;dbRG&amp;#39;) } # Set Permissions Foreach($role in $permissions.</description></item><item><title>App Service VNET Integration</title><link>https://til.rdz.io/docs/azure/appservice-vnet-integration/</link><pubDate>Thu, 04 Nov 2021 14:18:05 -0400</pubDate><guid>https://til.rdz.io/docs/azure/appservice-vnet-integration/</guid><description>Appservice Vnet Integration Gateway Integration When using gateway integration if you need to peer to another vnet the following must be configured.
Any changes to routes in the vnet integration may require a Network Sync performed on the App plan
Source Vnet Ensure that the peering has the following set
allowVirtualNetworkAccess: true allowForwardedTraffic: true allowGatewayTransit: true Destination Vnet Ensure that the peering has the following set
allowVirtualNetworkAccess: true allowForwardedTraffic: true useRemoteGateways: true App Plan Vnet Integration Add the subnet range to the routes.</description></item><item><title>Windows Update Information</title><link>https://til.rdz.io/docs/powershell/windows-update-information/</link><pubDate>Thu, 04 Nov 2021 14:14:21 -0400</pubDate><guid>https://til.rdz.io/docs/powershell/windows-update-information/</guid><description>Windows Update Information List update history 1 get-wmiobject -class win32_quickfixengineering To list last 50 updates including those without hotfix IDs
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 function Convert-WuaResultCodeToName { param( [Parameter(Mandatory=$true)] [int] $ResultCode ) $Result = $ResultCode switch($ResultCode){ 2{ $Result = &amp;#34;Succeeded&amp;#34; } 3{ $Result = &amp;#34;Succeeded With Errors&amp;#34; } 4{ $Result = &amp;#34;Failed&amp;#34; } } return $Result } function Get-WuaHistory{ # Get a WUA Session $session = (New-Object -ComObject &amp;#39;Microsoft.</description></item><item><title>Enable TLS 1.2 PWSH</title><link>https://til.rdz.io/docs/powershell/tls-support/</link><pubDate>Thu, 04 Nov 2021 14:05:01 -0400</pubDate><guid>https://til.rdz.io/docs/powershell/tls-support/</guid><description>Enable TLS 1.2 Support in Powershell script 1 [Net.ServicePointManager]::SecurityProtocol = &amp;#34;tls12, tls11, tls&amp;#34;</description></item><item><title>Retry Logic</title><link>https://til.rdz.io/docs/powershell/simple-retry-logic/</link><pubDate>Thu, 04 Nov 2021 14:04:32 -0400</pubDate><guid>https://til.rdz.io/docs/powershell/simple-retry-logic/</guid><description>Simple Retry Logic Loop 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 $Stoploop = $false [int]$Retrycount = &amp;#34;0&amp;#34; do { try { Scripts Commands here Write-Host &amp;#34;Job completed&amp;#34; $Stoploop = $true } catch { if ($Retrycount -gt 3){ Write-Host &amp;#34;Could not complete after 3 retrys.&amp;#34; $Stoploop = $true } else { Write-Host &amp;#34;Could not complete retrying in 30 seconds.</description></item><item><title>Get Virtual Disks</title><link>https://til.rdz.io/docs/powershell/get-virtualdisks-in-cluster/</link><pubDate>Thu, 04 Nov 2021 14:03:31 -0400</pubDate><guid>https://til.rdz.io/docs/powershell/get-virtualdisks-in-cluster/</guid><description>Get Virtual Disks by Node in Failover cluster 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 $Nodes = get-storagenode $disks = @() Foreach($node in $nodes){ $pools = Get-StoragePool -StorageNode $node Foreach($pool in $pools){ if($pool.IsPrimordial -eq $true){continue} $info = $pool | Get-VirtualDisk $disks += [PSCustomObject]@{ FriendlyName = $info.FriendlyName ResiliencySettingName = $info.ResiliencySettingName NumberOfColumns = $info.NumberOfColumns Interleave = $info.Interleave Size = $info.</description></item><item><title>Create Storage Spaces</title><link>https://til.rdz.io/docs/powershell/create-storage-space/</link><pubDate>Thu, 04 Nov 2021 14:02:08 -0400</pubDate><guid>https://til.rdz.io/docs/powershell/create-storage-space/</guid><description>Create Storage Space 1 2 3 4 5 6 7 8 9 10 11 12 # Get disk IDs Get-StoragePool -IsPrimordial $true | Get-PhysicalDisk | Where-Object CanPool -eq $True | select-object DeviceId, FriendlyName, @{Name=&amp;#34;Size&amp;#34;;Expression={$_.size/1GB}}, PhysicalLocation | Sort-Object -Property PhysicalLocation # Create Storage pool Example with 3 disk $disks = get-physicaldisk |? {$_.DeviceId -in 2,3,4} New-StoragePool –FriendlyName DataPool1 –StorageSubsystemFriendlyName (Get-StorageSubSystem).FriendlyName –PhysicalDisks $disks # Create Virtual Disk Example using 3 columns and 64k Interleave New-VirtualDisk -FriendlyName Data1 -StoragePoolFriendlyName DataPool1 -ProvisioningType Fixed -ResiliencySettingName Simple -NumberOfColumns 3 -Interleave 65536 –UseMaximumSize # 64K Interleave # Create Volume Example using 64k Allocation Units Get-VirtualDisk –FriendlyName DATA1 | Get-Disk | Initialize-Disk –Passthru | New-Partition –AssignDriveLetter –UseMaximumSize | Format-Volume -NewFileSystemLabel DATA1 -AllocationUnitSize 65536 # 64k Alloc Extending a Storage Pool 1 2 3 4 5 6 7 8 9 10 # Extend Pool $disks = get-physicaldisk |?</description></item><item><title>Capture 4xx/5xx Codes</title><link>https://til.rdz.io/docs/powershell/capture-http-statuscode/</link><pubDate>Thu, 04 Nov 2021 14:01:05 -0400</pubDate><guid>https://til.rdz.io/docs/powershell/capture-http-statuscode/</guid><description>Capture 4xx/5xx Status Codes using Invoke-WebRequest By default IWR throws an error and does not return an object when a 4xx/5xx error is thrown. Use the following to capture those statuses and return them.
1 2 try { $response = Invoke-WebRequest http://localhost/foo } catch { $_.Exception.Response.StatusCode.Value__}</description></item><item><title>Azure Rest API</title><link>https://til.rdz.io/docs/powershell/azure-rest-azprofile/</link><pubDate>Thu, 04 Nov 2021 13:59:56 -0400</pubDate><guid>https://til.rdz.io/docs/powershell/azure-rest-azprofile/</guid><description>Azure Rest API Authentication Using AZ Profile Credentials Rest API References
1 2 3 4 5 6 7 Add-Type -AssemblyName System.Web $resource = &amp;#34;https://management.azure.com&amp;#34; #Set to the root of the API Call. $context = [Microsoft.Azure.Commands.Common.Authentication.Abstractions.AzureRmProfileProvider]::Instance.Profile.DefaultContext $Token = [Microsoft.Azure.Commands.Common.Authentication.AzureSession]::Instance.AuthenticationFactory.Authenticate($context.Account, $context.Environment, $context.Tenant.Id.ToString(), $null, [Microsoft.Azure.Commands.Common.Authentication.ShowDialog]::Never, $null, $resource).AccessToken $header = @{Authorization = &amp;#34;Bearer &amp;#34; + $token } $results = Invoke-RestMethod -Method Get -Headers $header -uri &amp;#34;&amp;lt;AZURE REST URL&amp;gt;&amp;#34;</description></item><item><title>ADO Powershell Package Repo</title><link>https://til.rdz.io/docs/powershell/azure-devops-powershell-repo/</link><pubDate>Thu, 04 Nov 2021 13:52:26 -0400</pubDate><guid>https://til.rdz.io/docs/powershell/azure-devops-powershell-repo/</guid><description>Publish and Connect to Azure Devops Package Repo for Powershell Use Nuget to package and publish your module 1 2 3 nuget sources Add -Name &amp;#34;PowershellModules&amp;#34; -Source &amp;#34;https://pkgs.dev.azure.com/&amp;lt;ADO ORG NAME&amp;gt;/&amp;lt;ADO PROJECT NAME&amp;gt;/_packaging/&amp;lt;FEED NAME&amp;gt;/nuget/v3/index.json&amp;#34; -username &amp;#34;ADO USERNAME&amp;#34; -password &amp;#34;ADO PAT&amp;#34; nuget pack &amp;lt;NAME OF NUSPEC FILE&amp;gt;.nuspec nuget push -Source &amp;#34;PowershellModules&amp;#34; -ApiKey AzureDevOpsServices &amp;#34;&amp;lt;NAME OF NUPKG&amp;gt;.nupkg&amp;#34; Add Ado Artifact feed as powershell repo 1 2 3 4 5 6 7 $patToken = &amp;#34;PUT TOKEN HERE&amp;#34; | ConvertTo-SecureString -AsPlainText -Force $credsAzureDevopsServices = New-Object System.</description></item><item><title>Powershell Get</title><link>https://til.rdz.io/docs/powershell/add-powershellget/</link><pubDate>Thu, 04 Nov 2021 12:36:26 -0400</pubDate><guid>https://til.rdz.io/docs/powershell/add-powershellget/</guid><description>Powershell Get Package Management Powershell get is the latest package management to handle modules. It is required to install preview releases of modules
To install issue the following powershell command
1 Install-Module PowerShellGet -Force -AllowClobber -SkipPublisherCheck</description></item><item><title/><link>https://til.rdz.io/docs/powershell/get-diskinfo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://til.rdz.io/docs/powershell/get-diskinfo/</guid><description>Get All Disk Info for Storage Node 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 #Requires -Modules ImportExcel #Requires -RunAsAdministrator $node = get-storagenode -Name ([System.</description></item></channel></rss>